---
// Hero.astro
const serviceItems = [
  {
    img: "/images/contratito.png",
    alt: "Contrato personalizado",
    text: "Contrato especializado",
  },
  {
    img: "/images/martillo.png",
    alt: "Defensa legal",
    text: "Defensa legal",
  },
  {
    img: "/images/gestion.png",
    alt: "Gestión de cobros",
    text: "Gestión de cobros",
  },
  {
    img: "/images/times.png",
    alt: "Respuesta 24/7",
    text: "Respuesta 24/7",
  },
];
---

<section
  class="relative overflow-hidden min-h-[90vh] flex items-center
         bg-gradient-to-br from-midnight via-blue-950 to-blue-800
         bg-[url('/images/hero1.PNG')] bg-center sm:bg-right bg-no-repeat bg-cover"
>
  <div class="absolute inset-0 bg-midnight/15 z-0"></div>

  <div class="absolute inset-0 z-0">
    <div
      class="absolute w-[800px] h-[800px] bg-azul-primario opacity-20 rounded-2xl blur-3xl
             top-[-200px] left-[-300px] floating-animation"
    ></div>
    <div
      class="absolute w-[600px] h-[600px] bg-azul-primario opacity-15 rounded-2xl blur-2xl
             bottom-[-200px] right-[-250px] floating-animation animation-delay-2s"
    ></div>
    <div
      class="absolute w-[400px] h-[400px] bg-azul-shade opacity-10 rounded-2xl blur-xl
             top-1/2 left-1/4 floating-animation animation-delay-4s"
    ></div>
  </div>

  <div class="w-full relative z-10 min-h-[80vh] flex items-center">
    <div class="container mx-auto px-8 sm:px-10 lg:px-15 pt-1 pb-7 sm:py-10 lg:py-10">
      <div class="max-w-5xl">
        <div
          class="inline-flex font-family-raleway items-center rounded-2xl px-4 sm:px-6 py-2 text-xs text-white/90 mb-5 sm:mb-6
                 bg-white/10 backdrop-blur-md border border-white/20"
        >
          <span class="w-2 h-2 rounded-2xl mr-3 animate-pulse bg-amber-600"></span>
          Protección Legal Certificada
        </div>

        <h1
          class="text-3xl font-raleway font-extrabold sm:text-4xl md:text-5xl lg:text-6xl xl:text-7xl 2xl:text-8xl 
                  text-white leading-[1.1] mb-6 sm:mb-8 max-w-4xl text-left"
        >
          <span class="text-dorado-secundario block mb-1 sm:mb-2">Pólizas Jurídicas</span>
          <span class="block text-white mb-1 sm:mb-2">en México</span>
          <span class="block text-dorado-secundario">
            Respaldo <span class="text-white">seguro</span>
          </span>
        </h1>

        <div class="max-w-[405px] md:max-w-[620px] mb-8 sm:mb-10 text-left">
          <p class="text-xs text-balance font-poppins font-thin text-left sm:text-lg lg:text-md xl:text-lg text-blue-100/90 leading-relaxed">
            Brindamos <span class="text-dorado-secundario font-semibold">seguridad</span>,{' '}
            <span class="text-dorado-secundario font-semibold">respaldo legal</span> y{' '}
            <strong class="text-dorado-secundario">tranquilidad total</strong> en cada etapa del
            arrendamiento, tanto para propietarios como inquilinos.
          </p>
        </div>

        <div class="flex flex-col sm:flex-row gap-2 md:gap-x-5 mb-7 sm:mb-12">
          <a
            href="https://wa.me/5217772701431"
            target="_blank"
            tabindex="0"
            class="cta-button inline-flex items-center justify-center px-6 py-3 sm:px-4 sm:py-2 lg:px-4 lg:py-2 
                   bg-dorado-secundario text-azul-primario rounded-2xl
                   hover:bg-gray-200 hover:text-azul-primario/90 focus:bg-gray-200 focus:text-azul-primario/90
                   transform hover:scale-[1.02] focus:scale-[1.02]
                   transition-all duration-300 shadow-lg hover:shadow-xl focus:shadow-xl
                   w-fit min-w-[260px]"
          >
            <span class="text-xs md:text-base sm:text-xs font-montserrat font-medium">Cotiza tu póliza</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="ml-2 transition-transform duration-300 hover:translate-x-1 focus:translate-x-1"
              width="18"
              height="18"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path d="M5 12h14" />
              <path d="M12 5l7 7-7 7" />
            </svg>
          </a>

          <a
            href="#services"
            tabindex="0"
            class="cta-button inline-flex items-center justify-center px-6 sm:px-8 py-3 sm:py-4 
                   rounded-2xl font-semibold bg-white/5 backdrop-blur-lg border border-white/50 
                   text-white hover:text-black focus:text-black hover:bg-white/70 focus:bg-white/70 hover:border-black/40 focus:border-black/40
                   transform hover:scale-[1.02] focus:scale-[1.02]
                   transition-all duration-300 shadow-lg w-fit min-w-[260px]"
          >
            <span class="text-xs md:text-base sm:text-xs font-montserrat font-medium">Servicios</span>
            <svg
              xmlns="http://www.w3.org/2000/svg"
              class="ml-2 transition-transform duration-300 hover:translate-x-1 focus:translate-x-1"
              width="18"
              height="18"
              viewBox="0 0 24 24"
              fill="none"
              stroke="currentColor"
              stroke-width="2"
              stroke-linecap="round"
              stroke-linejoin="round"
            >
              <path d="M5 12h14" />
              <path d="M12 5l7 7-7 7" />
            </svg>
          </a>
        </div>

        <section
          class="lg:mt-12 mt-10 grid grid-cols-1 sm:grid-cols-2 md:grid-cols-4 lg:grid-cols-4 gap-y-2 lg:gap-x-3 xl:gap-3 md:gap-7 sm:gap-4 max-w-[260px] sm:max-w-lg md:max-w-2xl lg:min-w-[1170px] xl:min-w-[1520px]"
        >
          {serviceItems.map((item, index) => (
            <div
              class="service-card flex items-center max-w-[200px] gap-3 p-1 rounded-lg bg-slate-700/20 backdrop-blur-md border border-white/30 
                     hover:bg-white/30 transition-colors duration-200 cursor-pointer"
              data-service-index={index}
            >
              <img
                class="service-icon w-6 h-6 sm:w-8 sm:h-8 bg-dorado-secundario rounded-2xl p-1 flex-shrink-0
                       transition-colors duration-200 hover:bg-white"
                src={item.img}
                alt={item.alt}
              />
              <span class="service-text text-[11px] sm:text-xs font-thin font-poppins text-white hover:text-azul-primario transition-colors duration-200">
                {item.text}
              </span>
            </div>
          ))}
        </section>
      </div>
    </div>
  </div>
</section>

<style>
  @keyframes floating {
    0%, 100% {
      transform: translateY(0px) rotate(0deg);
    }
    50% {
      transform: translateY(-20px) rotate(3deg);
    }
  }

  .floating-animation {
    animation: floating 6s ease-in-out infinite;
  }

  .animation-delay-2s {
    animation-delay: 2s;
  }

  .animation-delay-4s {
    animation-delay: 4s;
  }

  /* Hover effects para desktop en service cards */
  .service-card:hover {
    background-color: rgba(255, 255, 255, 0.3);
  }

  .service-card:hover .service-icon {
    background-color: white;
  }

  .service-card:hover .service-text {
    color: var(--azul-primario);
  }

  /* Estados activos para touch/mobile en service cards */
  .service-card.active {
    background-color: rgba(255, 255, 255, 0.3);
  }

  .service-card.active .service-icon {
    background-color: white;
  }

  .service-card.active .service-text {
    color: var(--azul-primario);
  }

  /* Estados activos para botones CTA */
  .cta-button.active {
    transform: scale(1.02);
  }

  /* Hover effects para botones CTA en desktop */
  .cta-button:hover svg,
  .cta-button:focus svg {
    transform: translateX(4px);
  }

  .cta-button.active svg {
    transform: translateX(4px);
  }

  /* Mejorar la experiencia táctil */
  @media (hover: none) and (pointer: coarse) {
    .service-card,
    .cta-button {
      -webkit-tap-highlight-color: transparent;
    }
  }

  /* Asegurar que las variables CSS estén definidas */
  :root {
    --azul-primario: #1e40af;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const serviceCards = document.querySelectorAll('.service-card');
    const ctaButtons = document.querySelectorAll('.cta-button');
    let activeServiceCard = null;

    // Función para activar una service card
    function activateServiceCard(card) {
      if (activeServiceCard && activeServiceCard !== card) {
        activeServiceCard.classList.remove('active');
      }
      card.classList.add('active');
      activeServiceCard = card;

      // Auto-desactivar después de 2 segundos en móvil
      if ('ontouchstart' in window) {
        setTimeout(() => {
          if (activeServiceCard === card) {
            deactivateServiceCard(card);
          }
        }, 2000);
      }
    }

    // Función para desactivar una service card
    function deactivateServiceCard(card) {
      card.classList.remove('active');
      if (activeServiceCard === card) {
        activeServiceCard = null;
      }
    }

    // Event listeners para service cards
    serviceCards.forEach(card => {
      // Touch events para móviles
      card.addEventListener('touchstart', (e) => {
        e.preventDefault();
        if (card.classList.contains('active')) {
          deactivateServiceCard(card);
        } else {
          activateServiceCard(card);
        }
      }, { passive: false });

      // Click events para desktop como fallback
      card.addEventListener('click', (e) => {
        if (!('ontouchstart' in window)) {
          if (card.classList.contains('active')) {
            deactivateServiceCard(card);
          } else {
            activateServiceCard(card);
          }
        }
      });

      // Mouse events para desktop (mantener comportamiento original)
      card.addEventListener('mouseenter', () => {
        if (!('ontouchstart' in window)) {
          activateServiceCard(card);
        }
      });

      card.addEventListener('mouseleave', () => {
        if (!('ontouchstart' in window)) {
          deactivateServiceCard(card);
        }
      });
    });

    // Event listeners para botones CTA (mejorar feedback táctil)
    ctaButtons.forEach(button => {
      button.addEventListener('touchstart', () => {
        button.classList.add('active');
      });

      button.addEventListener('touchend', () => {
        setTimeout(() => {
          button.classList.remove('active');
        }, 150);
      });

      button.addEventListener('touchcancel', () => {
        button.classList.remove('active');
      });
    });

    // Cerrar service cards activas al tocar fuera de ellas
    document.addEventListener('touchstart', (e) => {
      if (!e.target.closest('.service-card') && activeServiceCard) {
        deactivateServiceCard(activeServiceCard);
      }
    });

    document.addEventListener('click', (e) => {
      if ('ontouchstart' in window && !e.target.closest('.service-card') && activeServiceCard) {
        deactivateServiceCard(activeServiceCard);
      }
    });
  });
</script>